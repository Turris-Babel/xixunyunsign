name: Release

on:
  # 手动触发
  workflow_dispatch:

  # 推送符合版本号模式的标签时触发
  push:
    tags:
      - 'v*.*.*'
    paths-ignore:
      - '**/*.md'

jobs:
  build-and-release:
    if: "!contains(github.ref, '.beta')"      # 跳过包含 .beta 的标签
    runs-on: ubuntu-22.04                     # ⚙️  固定使用稳定 LTS Runner
    steps:
      # 1) 检出完整历史
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2) 设置 Go 1.22
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      # 3) 安装交叉编译工具链与构建依赖
      - name: Install cross-toolchains & deps
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            gcc-aarch64-linux-gnu g++-aarch64-linux-gnu \
            gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf \
            gcc-arm-linux-gnueabi g++-arm-linux-gnueabi \
            gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64 \  # <— 新增，提供 x86_64-w64-mingw32-gcc/g++
            libssl-dev libcurl4-openssl-dev pkg-config


      # 4) 简要验证交叉编译器存在
      - name: Verify toolchains
        run: |
          echo "== aarch64-linux-gnu-gcc ==" && aarch64-linux-gnu-gcc --version | head -1
          echo "== arm-linux-gnueabihf-gcc ==" && arm-linux-gnueabihf-gcc --version | head -1
          echo "== arm-linux-gnueabi-gcc ==" && arm-linux-gnueabi-gcc --version | head -1

      # 5) 运行 GoReleaser（根据 .goreleaser.yaml 输出多架构产物）
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          version: latest
          args: release --clean
        env:
          # GitHub 令牌用于发布
          GITHUB_TOKEN: ${{ secrets.XXY_TOKEN }}
          # 指定各目标架构的交叉编译器
          CC_LINUX_ARM64: aarch64-linux-gnu-gcc
          CC_LINUX_ARM_V7: arm-linux-gnueabihf-gcc
          CC_LINUX_ARM_V5: arm-linux-gnueabi-gcc
          # 运行期库查找路径（如需）
          LD_LIBRARY_PATH: /opt/libs:/usr/lib/aarch64-linux-gnu:/usr/lib/arm-linux-gnueabihf

      # 6) 列出构建产物（方便查看日志）
      - name: List dist artifacts
        run: |
          echo "=== dist/ contents ==="
          find dist/ -type f | sort
