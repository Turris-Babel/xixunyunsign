name: Docker

on:
  push:
    tags:
      - 'v*.*.*' # Matches all version tags
    paths-ignore:
      - '**/*.md' # Ignore markdown file changes
  pull_request:
    branches: ["master"] # Trigger on pull requests to the master branch
  workflow_dispatch: # Allow manual triggering


env:
  # Use docker.io for Docker Hub
  REGISTRY: docker.io
  # Docker Hub repository name
  IMAGE_NAME: shadowaura/xixunyunsign

jobs:
  build:
    if: "!contains(github.ref, '.beta')" # 排除包含 .beta 的标签
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20
        with:
          cosign-release: 'v2.2.4'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226

      - name: Log into Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential gcc-aarch64-linux-gnu gcc-arm-linux-gnueabihf gcc-arm-linux-gnueabi libssl-dev libcurl4-openssl-dev pkg-config

      - name: Run Script
        env:
          CGO_ENABLED: 1
          CC: x86_64-linux-gnu-gcc
          CXX: x86_64-linux-gnu-g++
          PKG_CONFIG_SYSROOT_DIR: /sysroot/linux/amd64
          PKG_CONFIG_PATH: /sysroot/linux/amd64/usr/lib/pkgconfig:/sysroot/linux/amd64/usr/local/lib/pkgconfig
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: |
          export CGO_ENABLED=${{ env.CGO_ENABLED }}
          export CC=${{ env.CC }}
          export CXX=${{ env.CXX }}
          export PKG_CONFIG_SYSROOT_DIR=${{ env.PKG_CONFIG_SYSROOT_DIR }}
          export PKG_CONFIG_PATH=${{ env.PKG_CONFIG_PATH }}

          # 去除调试信息，最小化二进制文件大小
          go build -ldflags "-s -w" -trimpath -o output/xixunyunsign .

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
